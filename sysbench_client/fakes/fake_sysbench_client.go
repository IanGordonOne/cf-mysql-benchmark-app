// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/cf-mysql-benchmark-app/sysbench_client"
)

type FakeSysbenchClient struct {
	StartStub        func(string) (string, error)
	startMutex       sync.RWMutex
	startArgsForCall []struct {
		arg1 string
	}
	startReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeSysbenchClient) Start(arg1 string) (string, error) {
	fake.startMutex.Lock()
	fake.startArgsForCall = append(fake.startArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.startMutex.Unlock()
	if fake.StartStub != nil {
		return fake.StartStub(arg1)
	} else {
		return fake.startReturns.result1, fake.startReturns.result2
	}
}

func (fake *FakeSysbenchClient) StartCallCount() int {
	fake.startMutex.RLock()
	defer fake.startMutex.RUnlock()
	return len(fake.startArgsForCall)
}

func (fake *FakeSysbenchClient) StartArgsForCall(i int) string {
	fake.startMutex.RLock()
	defer fake.startMutex.RUnlock()
	return fake.startArgsForCall[i].arg1
}

func (fake *FakeSysbenchClient) StartReturns(result1 string, result2 error) {
	fake.StartStub = nil
	fake.startReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ sysbench_client.SysbenchClient = new(FakeSysbenchClient)
